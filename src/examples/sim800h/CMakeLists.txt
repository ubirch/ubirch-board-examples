# ADD_EXECUTABLE
ADD_EXECUTABLE(sim800h main.c ubirch_gsm.c)

SET_TARGET_PROPERTIES(sim800h PROPERTIES OUTPUT_NAME "sim800h.elf")

TARGET_LINK_LIBRARIES(sim800h -Wl,--start-group)
TARGET_LINK_LIBRARIES(sim800h ksdk-device-lib)
TARGET_LINK_LIBRARIES(sim800h ksdk-mmcau)
TARGET_LINK_LIBRARIES(sim800h ubirch-firmware)
TARGET_LINK_LIBRARIES(sim800h wolfcrypt)
# SYSTEM LIBRARIES
TARGET_LINK_LIBRARIES(sim800h m)
TARGET_LINK_LIBRARIES(sim800h c)
TARGET_LINK_LIBRARIES(sim800h gcc)
TARGET_LINK_LIBRARIES(sim800h nosys)
TARGET_LINK_LIBRARIES(sim800h -Wl,--end-group)

# MAP FILE
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}  -Xlinker -Map=sim800h.map")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker -Map=sim800h.map")

# BIN AND HEX
ADD_CUSTOM_COMMAND(TARGET sim800h POST_BUILD COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:sim800h> $<TARGET_FILE_DIR:sim800h>/sim800h.hex)
ADD_CUSTOM_COMMAND(TARGET sim800h POST_BUILD COMMAND ${CMAKE_OBJCOPY} -Obinary $<TARGET_FILE:sim800h> $<TARGET_FILE_DIR:sim800h>/sim800h.bin)
ADD_CUSTOM_COMMAND(TARGET sim800h POST_BUILD COMMAND cp $<TARGET_FILE_DIR:sim800h>/sim800h.bin ${CMAKE_CURRENT_SOURCE_DIR})
ADD_CUSTOM_COMMAND(TARGET sim800h POST_BUILD COMMAND cp $<TARGET_FILE_DIR:sim800h>/sim800h.elf ${CMAKE_CURRENT_SOURCE_DIR})
#ADD_CUSTOM_TARGET(burn COMMAND [ -d /Volumes/MBED ] && cp ${CMAKE_CURRENT_SOURCE_DIR}/sim800h.bin /Volumes/MBED DEPENDS sim800h)
