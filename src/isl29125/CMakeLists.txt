# ADD_EXECUTABLE
ADD_EXECUTABLE(isl29125 main.c isl29125.c)

SET_TARGET_PROPERTIES(isl29125 PROPERTIES OUTPUT_NAME "isl29125.elf")

TARGET_LINK_LIBRARIES(isl29125 -Wl,--start-group)
TARGET_LINK_LIBRARIES(isl29125 ksdk-device-lib)
TARGET_LINK_LIBRARIES(isl29125 ksdk-mmcau)
TARGET_LINK_LIBRARIES(isl29125 ubirch-firmware)
# SYSTEM LIBRARIES
TARGET_LINK_LIBRARIES(isl29125 m)
TARGET_LINK_LIBRARIES(isl29125 c)
TARGET_LINK_LIBRARIES(isl29125 gcc)
TARGET_LINK_LIBRARIES(isl29125 nosys)
TARGET_LINK_LIBRARIES(isl29125 -Wl,--end-group)

# MAP FILE
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}  -Xlinker -Map=isl29125.map")
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE "${CMAKE_EXE_LINKER_FLAGS_RELEASE} -Xlinker -Map=isl29125.map")

# BIN AND HEX
ADD_CUSTOM_COMMAND(TARGET isl29125 POST_BUILD COMMAND ${CMAKE_OBJCOPY} -Oihex $<TARGET_FILE:isl29125> $<TARGET_FILE_DIR:isl29125>/isl29125.hex)
ADD_CUSTOM_COMMAND(TARGET isl29125 POST_BUILD COMMAND ${CMAKE_OBJCOPY} -Obinary $<TARGET_FILE:isl29125> $<TARGET_FILE_DIR:isl29125>/isl29125.bin)
ADD_CUSTOM_COMMAND(TARGET isl29125 POST_BUILD COMMAND cp $<TARGET_FILE_DIR:isl29125>/isl29125.bin ${CMAKE_CURRENT_SOURCE_DIR})
ADD_CUSTOM_COMMAND(TARGET isl29125 POST_BUILD COMMAND cp $<TARGET_FILE_DIR:isl29125>/isl29125.elf ${CMAKE_CURRENT_SOURCE_DIR})
#ADD_CUSTOM_TARGET(burn COMMAND [ -d /Volumes/MBED ] && cp ${CMAKE_CURRENT_SOURCE_DIR}/isl29125.bin /Volumes/MBED DEPENDS isl29125)
